---
name: Test & Lint

on:
  push:
    branches:
      - main
      - develop

jobs:
  test:
    name: Python ${{ matrix.python-version }} tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install .[dev]
          python -m pip install pytest-github-actions-annotate-failures
      - name: pytest
        run: |
          python -m pytest --cov. --cov-branch --durations=10
          pytest -n 8 --cov=. --cov-branch --durations=50
          coverage report --omit=tests/*
          coverage xml --omit=tests/*
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_API_KEY }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install mypy & dev packages
        run: |
          python -m pip install ".[dev]"
      - name: ruff
        run: |
          python -m ruff check . \
            --diff \
            --show-source \
            --exit-non-zero-on-fix

  beautify:
    name: Beautify
    runs-on: ubuntu-latest
    concurrency: push
    needs: [test, lint]
    outputs:
      new_sha: ${{ steps.sha.outputs.SHA }}
    permissions:
      id-token: write
      contents: write

    steps:
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Ruff
        run: python -m pip install ".[dev]"

      - name: Format
        run: |
          python -m ruff format .

      - name: Commit and push changes
        uses: github-actions-x/commit@v2.9
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "style: beautify ${{ github.sha }}"
          name: github-actions
          email: action@github.com

      - name: Get new SHA
        id: sha
        run: |
          new_sha=$(git rev-parse HEAD)
          echo "SHA=$new_sha" >> $GITHUB_OUTPUT
  release:
    runs-on: ubuntu-latest
    concurrency: release
    needs: [test, lint, beautify]
    permissions:
      id-token: write
      contents: write

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Python Semantic Release
      uses: python-semantic-release/python-semantic-release@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
